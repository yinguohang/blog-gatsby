{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/leetcode-13","result":{"data":{"markdownRemark":{"id":"335a78e9-1008-59f8-8a16-082564d7e6d2","html":"<p><a href=\"https://leetcode.com/problems/roman-to-integer/tabs/description\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Question URL</a>  </p>\n<h3 id=\"题目大意\" style=\"position:relative;\"><a href=\"#%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F\" aria-label=\"题目大意 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>题目大意</h3>\n<p>将一个字符串类型的罗马数字转换为整数类型。输入的范围在1和3999之间。</p>\n<p><a href=\"https://baike.baidu.com/item/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/772296?fr=aladdin#3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">罗马数字-中文介绍-百度百科</a>\n规则如下：</p>\n<ol>\n<li>罗马数字中的数字符号有7种：I(1)、V(5)、X(10)、L(50)、C(100)、D(500)、M(1000)。</li>\n<li>一个罗马数字重复几次，就表示这个数的几倍。但同一数码不能出现三次以上。</li>\n<li>左减右加</li>\n<li>左减的数字有限制，仅限于I、X、C。</li>\n<li>左减时不可跨越一个位数。比如，99不可以用IC（100 - 1）表示。</li>\n</ol>\n<h3 id=\"解题思路\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\" aria-label=\"解题思路 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解题思路</h3>\n<p>罗马数字实际上为逐个表示每个数字（因为不允许跨越数位）。\n在表示每个数位的时候，其构成元素（数字符号）的结构为一个[小]/[(小-)中(-小)]/[小-大]的结构，比如在表示百位的时候会用到C(100)、D(500)、M(1000)，其中C为[小]，D为[中]，M为[大]；而高位的最小数字符号大于等于低位的最大数字符号，因此不存在连续的数字符号表示不同的位数，所以处理相同的连续数字符号的时候可以将它们合并成一个变量(cur)；即表示高位的最后一个数字符号肯定大于表示相邻的地位的第一个数字符号，因此上升的结构只存在于表示一个数位的时候（[小-中/大]）而不会出现在分别表示两个数位的结构中。\n因此从左向右扫描，构成整个罗马数字的数字符号在</p>\n<ol>\n<li>变大的时候需要减去cur即可，之后清空cur。</li>\n<li>不变的时候累计cur。</li>\n<li>变小的时候加上当前cur，重新累计cur。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">romanToInt</span><span class=\"token punctuation\">(</span>string s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> dict<span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'V'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'X'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n        dict<span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> cur <span class=\"token operator\">=</span> dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                cur <span class=\"token operator\">=</span> cur <span class=\"token operator\">+</span> dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                ans <span class=\"token operator\">=</span> ans <span class=\"token operator\">+</span> dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> cur<span class=\"token punctuation\">;</span>    \n                cur <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                ans <span class=\"token operator\">=</span> ans <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">;</span>\n                cur <span class=\"token operator\">=</span> dict<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> ans <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/leetcode-13","tagSlugs":["/tag/c/"]},"frontmatter":{"date":"2017-07-27 21:59:00 +0800","description":"Solution for Leetcode 13 Roman to Integer","tags":["C++"],"title":"Leetcode 13 Roman to Integer","socialImage":null}}},"pageContext":{"slug":"/posts/leetcode-13"}}}